package main

import (
	"encoding/hex"
	"fmt"
	"log"
	"os"
	"time"

	"github.com/howeyc/gopass"
	ontology_go_sdk "github.com/ontio/ontology-go-sdk"
	"github.com/ontio/ontology/common"
	"github.com/urfave/cli/v2"
)

const (
	contractHex = `55c56b05322e302e306a00527ac40c4f776e6572416464726573736a51527ac404585858586a52527ac46c5ec56b6a00527ac46a51527ac46a52527ac46a51c304696e69747d9c7c756418006a52c3516a00c3063c03000000006e6c756662dd006a51c30b696e69745f7374617475737d9c7c75641500006a00c306cf02000000006e6c756662b5006a51c30953746f7265486173687d9c7c756418006a52c3516a00c3061e04000000006e6c7566628c006a51c30e436865636b4861736845786973747d9c7c756418006a52c3516a00c3060905000000006e6c7566625e006a51c30f64657374726f79436f6e74726163747d9c7c75641500006a00c3063f01000000006e6c75666232006a51c30f6d696772617465436f6e74726163747d9c7c756418006a52c3516a00c306cf01000000006e6c7566620300006c756658c56b6a00527ac46a51527ac46203006a00c351c3681953797374656d2e53746f726167652e476574436f6e74657874681253797374656d2e53746f726167652e4765746a52527ac46a52c3c0007d9e7c75f16a52c3681b53797374656d2e52756e74696d652e436865636b5769746e657373f1681753797374656d2e436f6e74726163742e44657374726f796c75665ac56b6a00527ac46a51527ac46a52527ac46203006a00c351c3681953797374656d2e53746f726167652e476574436f6e74657874681253797374656d2e53746f726167652e4765746a53527ac46a53c3c0007d9e7c75f16a53c3681b53797374656d2e52756e74696d652e436865636b5769746e657373f10b6465736372697074696f6e05656d61696c06617574686f720776657273696f6e046e616d65516a52c368194f6e746f6c6f67792e436f6e74726163742e4d6967726174656a54527ac46a54c3f1144d696772617465207375636365737366756c6c796a54c352c176c9681553797374656d2e52756e74696d652e4e6f746966796a54c36c756658c56b6a00527ac46a51527ac46203006a00c351c3681953797374656d2e53746f726167652e476574436f6e74657874681253797374656d2e53746f726167652e4765746a52527ac46a52c351c176c9681553797374656d2e52756e74696d652e4e6f746966796a52c36c75665bc56b6a00527ac46a51527ac46a52527ac46203006a00c351c3681953797374656d2e53746f726167652e476574436f6e74657874681253797374656d2e53746f726167652e476574c0007d9c7c756466006a52c36a00c351c3681953797374656d2e53746f726167652e476574436f6e74657874681253797374656d2e53746f726167652e50757409696e6974205472756551c176c9681553797374656d2e52756e74696d652e4e6f74696679516c7566622d000a696e69742046616c736551c176c9681553797374656d2e52756e74696d652e4e6f74696679006c75666c75665cc56b6a00527ac46a51527ac46a52527ac46203006a52c3c0517d9e7c75640a00006c75666203006a00c351c3681953797374656d2e53746f726167652e476574436f6e74657874681253797374656d2e53746f726167652e4765746a53527ac46a53c3c0007d9e7c75f16a53c3681b53797374656d2e52756e74696d652e436865636b5769746e657373f16a52c300c36a54527ac4516a54c3681953797374656d2e53746f726167652e476574436f6e74657874681253797374656d2e53746f726167652e5075746a54c351c176c9681553797374656d2e52756e74696d652e4e6f74696679516c75665bc56b6a00527ac46a51527ac46a52527ac46203006a52c3c0517d9e7c75640a00006c75666203006a52c300c36a53527ac46a53c3681953797374656d2e53746f726167652e476574436f6e74657874681253797374656d2e53746f726167652e4765746a54527ac46a54c300936c7566`
)

func rootCmd(c *cli.Context) error {
	cfwlt := c.String("wallet")
	cfRest := c.String("resturl")
	log.Printf("rading wallet: %s, send request to: %s", cfwlt, cfRest)
	sdk := ontology_go_sdk.NewLayer2Sdk()
	sdk.NewRpcClient().SetAddress(cfRest)

	wall, err := ontology_go_sdk.OpenWallet(cfwlt)
	if err != nil {
		return err
	}
	fmt.Println("input wallet passwd:")
	psw, err := gopass.GetPasswd()
	if err != nil {
		return err
	}
	act, err := wall.GetDefaultAccount(psw)
	if err != nil {
		return err
	}
	log.Printf("get default account OK, using account: %s", act.Address.ToBase58())
	contract, err := hex.DecodeString(contractHex)
	if err != nil {
		return err
	}

	txHash, err := sdk.NeoVM.DeployNeoVMSmartContract(0, 20400000, act, true, contractHex, "zaicotest", "0.1", "diu", "diu@onchain.com", "desc todo")
	if err != nil {
		return err
	}
	log.Printf("%s", txHash.ToHexString())

	time.Sleep(10 * time.Second)

	addr := common.AddressFromVmCode(contract)
	log.Println("contract address:", addr.ToHexString())
	res, err := sdk.NeoVM.PreExecInvokeNeoVMContract(addr, []interface{}{"init_status", 2})
	if err != nil {
		return err
	}
	log.Println(res)

	return nil
}

func main() {
	app := &cli.App{
		Name: "deploy",
		Flags: []cli.Flag{
			&cli.StringFlag{
				Name:  "resturl",
				Value: "http://152.32.217.204:40336",
				Usage: "the remote url, default to testnet",
			},

			&cli.StringFlag{
				Name:  "wallet",
				Value: "wallet.dat",
				Usage: "the wallet to deploy this contract",
			},
		},
		Usage:  "deploy l2 contract",
		Action: rootCmd,
	}

	err := app.Run(os.Args)
	if err != nil {
		log.Fatal(err)
	}
}
